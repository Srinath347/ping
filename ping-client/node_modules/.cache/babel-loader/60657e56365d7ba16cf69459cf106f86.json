{"ast":null,"code":"const AUTH_SERVICE = \"http://localhost:8081\";\nconst CHAT_SERVICE = \"http://localhost:8080\";\nconst request = options => {\n  const headers = new Headers();\n  if (options.setContentType !== false) {\n    headers.append(\"Content-Type\", \"application/json\");\n  }\n\n  // if (localStorage.getItem(\"senderId\")) {\n  //   headers.append(\n  //     \"Authorization\",\n  //     \"Bearer \" + localStorage.getItem(\"senderId\")\n  //   );\n  // }\n\n  const defaults = {\n    headers: headers\n  };\n  options = Object.assign({}, defaults, options);\n  return fetch(options.url, options).then(response => response.json().then(json => {\n    if (!response.ok) {\n      return Promise.reject(json);\n    }\n    return json;\n  }));\n};\nexport function login(loginRequest) {\n  return request({\n    url: AUTH_SERVICE + \"/signin\",\n    method: \"POST\",\n    body: JSON.stringify(loginRequest)\n  });\n}\nexport function facebookLogin(facebookLoginRequest) {\n  return request({\n    url: AUTH_SERVICE + \"/facebook/signin\",\n    method: \"POST\",\n    body: JSON.stringify(facebookLoginRequest)\n  });\n}\nexport function signup(signupRequest) {\n  return request({\n    url: AUTH_SERVICE + \"/users\",\n    method: \"POST\",\n    body: JSON.stringify(signupRequest)\n  });\n}\nexport function getCurrentUser() {\n  if (!localStorage.getItem(\"senderId\")) {\n    return Promise.reject(\"No access token set.\");\n  }\n  return request({\n    url: AUTH_SERVICE + \"/users/me\",\n    method: \"GET\"\n  });\n}\nexport function getUsers() {\n  // if (!localStorage.getItem(\"senderId\")) {\n  //   return Promise.reject(\"No access token set.\");\n  // }\n\n  // return request({\n  //   url: AUTH_SERVICE + \"/users/summaries\",\n  //   method: \"GET\",\n  // });\n  const users = {\n    \"id\": 1,\n    \"username\": \"Joe\"\n  };\n}\nexport function countNewMessages(senderId, recipientId) {\n  if (!localStorage.getItem(\"senderId\")) {\n    return Promise.reject(\"No access token set.\");\n  }\n  return request({\n    url: CHAT_SERVICE + \"/messages/\" + senderId + \"/\" + recipientId + \"/count\",\n    method: \"GET\"\n  });\n}\nexport function findChatMessages(senderId, recipientId) {\n  if (!localStorage.getItem(\"senderId\")) {\n    return Promise.reject(\"No access token set.\");\n  }\n  return request({\n    url: CHAT_SERVICE + \"/messages/\" + senderId + \"/\" + recipientId,\n    method: \"GET\"\n  });\n}\nexport function findChatMessage(id) {\n  if (!localStorage.getItem(\"senderId\")) {\n    return Promise.reject(\"No access token set.\");\n  }\n  return request({\n    url: CHAT_SERVICE + \"/messages/\" + id,\n    method: \"GET\"\n  });\n}","map":{"version":3,"names":["AUTH_SERVICE","CHAT_SERVICE","request","options","headers","Headers","setContentType","append","defaults","Object","assign","fetch","url","then","response","json","ok","Promise","reject","login","loginRequest","method","body","JSON","stringify","facebookLogin","facebookLoginRequest","signup","signupRequest","getCurrentUser","localStorage","getItem","getUsers","users","countNewMessages","senderId","recipientId","findChatMessages","findChatMessage","id"],"sources":["/Users/srinath/Desktop/ping/ping-client/src/util/ApiUtil.js"],"sourcesContent":["const AUTH_SERVICE = \"http://localhost:8081\";\nconst CHAT_SERVICE = \"http://localhost:8080\";\n\nconst request = (options) => {\n  const headers = new Headers();\n\n  if (options.setContentType !== false) {\n    headers.append(\"Content-Type\", \"application/json\");\n  }\n\n  // if (localStorage.getItem(\"senderId\")) {\n  //   headers.append(\n  //     \"Authorization\",\n  //     \"Bearer \" + localStorage.getItem(\"senderId\")\n  //   );\n  // }\n\n  const defaults = { headers: headers };\n  options = Object.assign({}, defaults, options);\n\n  return fetch(options.url, options).then((response) =>\n    response.json().then((json) => {\n      if (!response.ok) {\n        return Promise.reject(json);\n      }\n      return json;\n    })\n  );\n};\n\nexport function login(loginRequest) {\n  return request({\n    url: AUTH_SERVICE + \"/signin\",\n    method: \"POST\",\n    body: JSON.stringify(loginRequest),\n  });\n}\n\nexport function facebookLogin(facebookLoginRequest) {\n  return request({\n    url: AUTH_SERVICE + \"/facebook/signin\",\n    method: \"POST\",\n    body: JSON.stringify(facebookLoginRequest),\n  });\n}\n\nexport function signup(signupRequest) {\n  return request({\n    url: AUTH_SERVICE + \"/users\",\n    method: \"POST\",\n    body: JSON.stringify(signupRequest),\n  });\n}\n\nexport function getCurrentUser() {\n  if (!localStorage.getItem(\"senderId\")) {\n    return Promise.reject(\"No access token set.\");\n  }\n\n  return request({\n    url: AUTH_SERVICE + \"/users/me\",\n    method: \"GET\",\n  });\n}\n\nexport function getUsers() {\n  // if (!localStorage.getItem(\"senderId\")) {\n  //   return Promise.reject(\"No access token set.\");\n  // }\n\n  // return request({\n  //   url: AUTH_SERVICE + \"/users/summaries\",\n  //   method: \"GET\",\n  // });\n  const users = {\n    \"id\": 1,\n    \"username\": \"Joe\"\n  }\n}\n\nexport function countNewMessages(senderId, recipientId) {\n  if (!localStorage.getItem(\"senderId\")) {\n    return Promise.reject(\"No access token set.\");\n  }\n\n  return request({\n    url: CHAT_SERVICE + \"/messages/\" + senderId + \"/\" + recipientId + \"/count\",\n    method: \"GET\",\n  });\n}\n\nexport function findChatMessages(senderId, recipientId) {\n  if (!localStorage.getItem(\"senderId\")) {\n    return Promise.reject(\"No access token set.\");\n  }\n\n  return request({\n    url: CHAT_SERVICE + \"/messages/\" + senderId + \"/\" + recipientId,\n    method: \"GET\",\n  });\n}\n\nexport function findChatMessage(id) {\n  if (!localStorage.getItem(\"senderId\")) {\n    return Promise.reject(\"No access token set.\");\n  }\n\n  return request({\n    url: CHAT_SERVICE + \"/messages/\" + id,\n    method: \"GET\",\n  });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}